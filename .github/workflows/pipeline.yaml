name: .NET 7 Build and Release

on:
  push:
    branches:
      - main
      - develop

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      gitversion_fullsemver: ${{ steps.gitversion.outputs.fullSemVer }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"

      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

  build-and-test:
    runs-on: ubuntu-latest
    needs: version

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install .NET 7
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Dotnet Build
        run: dotnet build -c release --no-restore

      - name: Dotnet Test
        run: dotnet test --configuration Release --no-build

  package-linux:
    runs-on: ubuntu-latest
    needs: [version, build-and-test]
    env:
      GITVERSION_FULLSEMVER: ${{ needs.version.outputs.gitversion_fullsemver }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install .NET 7
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Dotnet Publish
        run: |
          dotnet publish -c Release --output FakerCLI.$GITVERSION_FULLSEMVER src/FakerCLI
          mv ./FakerCLI.$GITVERSION_FULLSEMVER/FakerCLI ./FakerCLI.$GITVERSION_FULLSEMVER/faker 
          tar -cvf FakerCLI.linux.tar.gz FakerCLI.$GITVERSION_FULLSEMVER
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: FakerCLI.linux.tar.gz
          path: FakerCLI.linux.tar.gz

      - name: Display Directory
        run: |
          echo exibindo diretório
          ls -la
          echo dotnet-version: $(dotnet --version)
          echo -----------------------------------
          echo exibindo diretório .github/workflows
          ls -la ./.github/workflows  
          echo -----------------------------------
          echo exibindo diretório FakerCLI.$GITVERSION_FULLSEMVER
          ls -la FakerCLI.$GITVERSION_FULLSEMVER

  package-windows:
    runs-on: windows-latest
    needs: [version, build-and-test]
    env:
      GITVERSION_FULLSEMVER: ${{ needs.version.outputs.gitversion_fullsemver }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install .NET 7
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
          
      - name: Dotnet Publish
        run: |
          $directoryPackage = "FakerCLI." + $env:GITVERSION_FULLSEMVER
          dotnet publish -c Release --output $directoryPackage src/FakerCLI

          $newFileName = Join-Path -Path $directoryPackage -ChildPath "faker.exe"
          $oldFileName = Join-Path -Path $directoryPackage -ChildPath "FakerCLI.exe"
          Rename-Item -Path $oldFileName -NewName $newFileName

          Compress-Archive -Path ".\$directoryPackage\*" -DestinationPath FakerCLI.windows.zip

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: FakerCLI.windows.zip
          path: FakerCLI.windows.zip

      - name: Display Directory
        run: |
          echo exibindo diretório
          Get-ChildItem -Force
          echo dotnet-version: $(dotnet --version)
          echo -----------------------------------
          echo exibindo diretório .github/workflows
          Get-ChildItem -Force ./.github/workflows  
          echo -----------------------------------
          $directoryPackage = "FakerCLI." + $env:GITVERSION_FULLSEMVER
          echo exibindo diretório $directoryPackage
          Get-ChildItem -Force $directoryPackage

  release:
    runs-on: ubuntu-latest
    needs: [version, package-linux, package-windows]
    env:
      GITVERSION_FULLSEMVER: ${{ needs.version.outputs.gitversion_fullsemver }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Artifacts Linux
        uses: actions/download-artifact@v2
        with:
          name: FakerCLI.linux.tar.gz

      - name: Download Artifacts Windows
        uses: actions/download-artifact@v2
        with:
          name: FakerCLI.windows.zip

      - name: Install .NET 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x # gitreleasemanager dependency

      - name: Install GitReleaseManager
        run: dotnet tool install --global GitReleaseManager.Tool --version 0.14.0

      - name: Display Directory
        run: |
          echo exibindo diretório
          ls -la
          echo dotnet-version: $(dotnet --version)
          echo -----------------------------------
          echo exibindo diretório .github/workflows
          ls -la ./.github/workflows

      - name: Create Tag
        id: create_tag
        run: |
          echo "GITVERSION_FULLSEMVER: $GITVERSION_FULLSEMVER"
          git tag $GITVERSION_FULLSEMVER
          git push origin $GITVERSION_FULLSEMVER
          echo created tag: $GITVERSION_FULLSEMVER

      - name: Create Release
        run: |
          dotnet-gitreleasemanager create -n faker-cli.$GITVERSION_FULLSEMVER \
          --token ${{ secrets.ACTION_PAT_SECRET }} \
          --owner ${{ github.repository_owner }} \
          --repository ${{ github.event.repository.name }} \
          --assets FakerCLI.tar.gz,FakerCLI.windows.zip \
          --inputFilePath .github/workflows/GitReleaseManager.yaml

      - name: Publish Release
        run: |
          dotnet-gitreleasemanager publish \
          --tagName faker-cli.$GITVERSION_FULLSEMVER \
          --token ${{ secrets.ACTION_PAT_SECRET }} \
          --owner ${{ github.repository_owner }} \
          --repository ${{ github.event.repository.name }}