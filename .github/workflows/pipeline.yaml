name: .NET 7 Build and Release

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-test-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install .NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    
    - name: Install .NET 3
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '3.x.x'

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'

    - uses: gittools/actions/gitreleasemanager/setup@v0
      name: Install GitReleaseManager
      with:
        versionSpec: '0.10.x'

    - name: Restore dependencies
      run: dotnet restore #--verbosity normal

    - name: Determine version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0
   
    - name: Dotnet Build
      run: dotnet build -c release --no-restore  #--verbosity normal
    
    - name: Dotnet Test
      run: dotnet test --configuration Release --no-build  #--verbosity normal    

    - name: Create version tag
      id: create_tag
      run: |
        echo "GITVERSION_INFORMATIONALVERSION: $GITVERSION_INFORMATIONALVERSION"
        echo "GITVERSION_FULLSEMVER: $GITVERSION_FULLSEMVER"
        git tag $GITVERSION_FULLSEMVER
        git push origin $GITVERSION_FULLSEMVER
        echo created tag: $GITVERSION_FULLSEMVER

    - name: Dotnet Publish
      run: dotnet publish -c Release --output FakerCLI.$GITVERSION_FULLSEMVER src/FakerCLI 
    
    - name: Display Directory
      run: |
        ls -l
        dotnet --version

    - name: Create Release
      id: create_release
      uses: gittools/actions/gitreleasemanager/create@v0
      with:
        token: ${{ secrets.ACTION_PAT_SECRET }}
        owner: ${{ github.repository_owner }}
        repository: ${{ github.event.repository.name }}
        name: $GITVERSION_FULLSEMVER
        assets:  |
          FakerCLI.$GITVERSION_FULLSEMVER


    - name: Create Source Code Zip
      run: git archive -o source-code.zip HEAD

    - name: Upload Source Code Zip
      run: |
        gitreleasemanager upload -assetpath "source-code.zip" -token ${{ secrets.ACTION_PAT_SECRET }} -owner ${{ github.repository_owner }} -repo ${{ github.event.repository.name }} -tag ${{ steps.create_release.outputs.tag_name }}
      
    
